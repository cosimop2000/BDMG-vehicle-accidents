{
    "Input": [
        {
            "method": "load_dataset",
            "input_pandas": {
                "sep": ","
            },
            "input_vaex": {
            },
            "input_polars":{

            },
            "input_datatable":{

            },
            "input_spark":{

            },
            "input_dask":{

            },
            "input_pyspark_pandas":{

            },
            "input_modin_ray":{
                
            }
        },
        {
            "method": "force_execution",
            "input": {}
        }
    ],

    "EDA": [
        {
            "method": "get_columns",
            "input":{}
        },
        {
            "method": "get_stats",
            "input": {}
        },
        {
            "method": "perc_null_values",
            "input":{}
        },
        {
            "method":"query",
            "input_pandas":{
                "query":"(Start_Lat == End_Lat) & (Start_Lng == End_Lng)"
            },
            "input_vaex":{
                "query":"(Start_Lat == End_Lat) & (Start_Lng == End_Lng)"
            }

        },
        {
            "method":"check_missing_values",
            "input_pandas":{
                "col1": "End_Lat",
                "col2": "End_Lng"
            }
        },
        {
            "method":"is_unique",
            "input_pandas":{
                "column":"ID"
            }
        },
        {
            "method":"is_unique",
            "input_pandas":{
                "column":"Description"
            }
        },
        {
            "method":"locate_null_values",
            "input_pandas":{
                "column":"Airport_Code"
            }
        },
        {
            "method":"query",
            "input_pandas":{
                "query":"`Precipitation(in)` == 0"
            },
            "input_vaex":{
                "query":"`Precipitation(in)` == 0"
            }

        },
        {
            "method":"look_for_cases",
            "input_pandas":{
                "col1":"Humidity(%)",
                "col2":"Precipitation(in)",
                "col3":"Humidity(%)",
                "col4":"Precipitation(in)"
            }
        },
        {
            "method":"look_for_cases",
            "input_pandas":{
                "col1":"Wind_Speed(mph)",
                "col2":"Wind_Chill(F)",
                "col3":"Wind_Speed(mph)",
                "col4":"Wind_Chill(F)"
            }
        },
        {
            "method":"sample_rows",
            "input_pandas":{
                "frac": true,
                "num": 1
            }
        },
        {
            "method":"sort",
            "input_pandas":{
                "columns":["Weather_Condition"]
            }
        },
        {
            "method": "force_execution",
            "input": {}
        }



    ],

    "data_transformation": [
        {
            "method":"change_date_time_format",
            "input_pandas":{
                "column":"Start_Time",
                "format":"%Y-%m-%d %H:%M:%S"
            }
        },
        {
            "method":"change_date_time_format",
            "input_pandas":{
                "column":"End_Time",
                "format":"%Y-%m-%d %H:%M:%S"
            }
        },
        {
            "method":"change_date_time_format",
            "input_pandas":{
                "column":"Weather_Timestamp",
                "format":"%Y-%m-%d %H:%M:%S"
            }
        },
        {
            "method": "force_execution",
            "input": {}    
        }

    ],

    "data_cleaning": [
     
        {
            "method": "force_execution",
            "input": {}
        
        }

    ],

    "output": [



    ]


}